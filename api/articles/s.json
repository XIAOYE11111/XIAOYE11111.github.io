{"title":"JQ中的事件绑定","slug":"s","date":"2018-11-11T00:43:00.926Z","updated":"2018-11-11T05:32:59.735Z","comments":true,"path":"api/articles/s.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<blockquote><p>在文档装载完成后，如果打算为元素绑定事件来完成某种操作，则可以使用bind()方法来对匹配的元素进行特定的事件的绑定，bind()方法的调用格式为:</p>\n</blockquote>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">bind</span>(<span class=\"class\"><span class=\"keyword\">type</span>,[<span class=\"keyword\">data</span>],fn)；</span></span><br><span class=\"line\">/*bind()方法有<span class=\"number\">3</span>个参数，</span><br><span class=\"line\">第一个参数是事件类型，包括:blur,focus,load,resize,scroll,unload,click,dbclick,mousedown,mouseup,mousemove,mouseover,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup和error等，当然也可以自定义名称</span><br><span class=\"line\">第二个参数是可选参数，作为event，<span class=\"class\"><span class=\"keyword\">data</span>属性值传递给事件对象的额外数据对象</span></span><br><span class=\"line\">第三个参数则是用来绑定的处理函数*/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote><p>下面通过一个示例来了解bind()方法的用法<br>假设网页中有一个FAQ，单击“标题”链接将显示内容<br>html代码如下:</p>\n</blockquote>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">div</span> <span class=\"built_in\">id</span>=<span class=\"string\">\"panel\"</span>&gt;</span><br><span class=\"line\">\t&lt;h5 <span class=\"built_in\">class</span>=<span class=\"string\">\"head\"</span>&gt;JQuery&lt;/h5&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span><br><span class=\"line\">\t\tJQuery是XXXXXXXXXX</span><br><span class=\"line\">\t\tXXXXXXXXXX</span><br><span class=\"line\">\t\tXXXXXXXXXX</span><br><span class=\"line\">&lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n<blockquote><p>按照需求，需要完成以下几个步骤<br>1.等待DOM装载完毕<br>2.找到“标题”所在的元素，绑定click事件<br>3.找到“内容”元素，将“内容”元素显示。<br>根据分析的步骤，可以轻易写出如下JQuery代码</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"string\">\"#panel h5.head\"</span>).bind(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"string\">\"this\"</span>).next(<span class=\"string\">\"div.content\"</span>).show();</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote><p>2.加强效果<br>在上面的例子，单击“标题”链接显示出“内容”；再次单击“标题”链接，“内容”并没有任何反应。现在需要加强效果：第二次单击“标题”链接，“内容”隐藏；再次单击“标题”链接，“内容”又显示，两个动作循环出现，为了实现这个功能，需要经过以下几个步骤。<br>1.等待DOM装载完毕<br>2.找到“标题”所在元素，绑定click事件<br>3.找到“内容”元素，如果“内容”元素是显示的，则隐藏，如果“内容”元素是隐藏的，则显示。<br>判断元素是否显示，可以用JQuery中的is()方法来完成。<br>is(“:visible”) </p>\n</blockquote>\n<blockquote><p>3.改变绑定事件的类型<br>上面的例子中，给元素绑定的事件类型是click，也就是当用户点击之后执行事件的函数。<br>现在把事件类型换成了mouseover和mouseout，即当光标滑过的时候，就触发事件。<br>代码如下</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"string\">\"#panel h5.head\"</span>).bind(<span class=\"string\">\"mouseover\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).show();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t$(<span class=\"string\">\"#panel h5.head\"</span>).bind(<span class=\"string\">\"mouseoout\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).hide();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote><p>像click，mouseover和mouseout这类事件，在程序中会经常用到，所以JQuery也为此提供了一套简写的方法。<br>如下</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"string\">\"#panel h5.head\"</span>).mouseover(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).show();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">$(<span class=\"string\">\"#panel h5.head\"</span>).mouseout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).hide();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote><p>其实以上的那个功能也可以用hover()方法来实现<br>JQuery 有两个合成事件，hover()方法和toggle()方法，类似前面讲过的ready()方法，都属于JQuery自定义方法。<br>hover()方法的语法结构为:<br>hover(enter,leave);<br>hover()方法用于模拟光标悬停事件。当光标移动到元素上时，会触发指定的第一个函数enter；当光标移出这个元素时，会触发指定的第二个函数leave<br>将上面的例子改写成使用hover()方法，代码如下</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"string\">\"#panel h5.head\"</span>).hover(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).show();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).hide();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<blockquote><p>toggle()方法<br>toggle()方法的语法结构为：<br>toggle(fn1,fn2….fnN);<br>toggle()方法用于模仿鼠标连续单击事件。第一次单击元素，触发指定的第一个函数(fn1)；当再次单击到同一元素时，则触发指定的第二个函数(fn2)，如果有更多的函数，则依次触发。直到最后一个，随后的每次单击都重复对这几个函数轮番调用。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"string\">\"#panel h5.head\"</span>).toggle(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).show();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).hide();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<blockquote><p>toggle()方法在JQ中还有一个作用，切换元素的可见状态。如果元素是可见的，则单击后隐藏，如果不是可见的则单击后可见。<br>因此上面代码还能改成如下</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t$(<span class=\"string\">\"#panel h5.head\"</span>).toggle(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).toggle();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t$(<span class=\"keyword\">this</span>).next(<span class=\"string\">\"div.content\"</span>).toggle();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>","categories":[{"name":"JavaScript","slug":"JavaScript","count":6,"path":"api/categories/JavaScript.json"},{"name":"JQuery","slug":"JavaScript/JQuery","count":6,"path":"api/categories/JavaScript/JQuery.json"}],"tags":[{"name":"笔记","slug":"笔记","count":7,"path":"api/tags/笔记.json"}]}