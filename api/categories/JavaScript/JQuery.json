{"name":"JQuery","slug":"JavaScript/JQuery","count":3,"postlist":[{"title":"JQ中的节点操作","slug":"JQ中的节点操作","date":"2018-11-08T02:54:42.663Z","updated":"2018-11-08T05:49:13.754Z","comments":true,"path":"api/articles/JQ中的节点操作.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote><p>为了能全面的理解JQ中的DOM操作，我们首先需要构建一个Html网页，因为每一张网页都能用DOM表示出来，而每一份DOM都可以看作一个DOM树，构建的网页如图<br>HTML代码如下</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">mata</span> <span class=\"attr\">http-eqiv</span>=<span class=\"string\">\"content-type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf8\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>dom<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">title</span>=<span class=\"string\">\"选择你喜欢的水果\"</span>&gt;</span>你喜欢的水果是？<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">title</span>=<span class=\"string\">\"苹果\"</span>&gt;</span> 苹果<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">title</span>=<span class=\"string\">\"橘子\"</span>&gt;</span> 橘子<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">title</span>=<span class=\"string\">\"菠萝\"</span>&gt;</span> 菠萝<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote><p>上图网页结构的DOM树其实也就是<br>html-&gt;head&amp;&amp;body<br>-&gt;head-&gt;meta&amp;&amp;title<br>-&gt;body-&gt;p&amp;&amp;ul<br>-&gt;ul-&gt;li&amp;&amp;li&amp;&amp;li<br>接下来各种DOM操作都将围绕这dom树展开</p>\n</blockquote>\n<blockquote><p>A.查找节点<br>1.查找元素节点</p>\n</blockquote>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"variable\">$li</span> =$(<span class=\"string\">\"ul li:eq(1)\"</span>);\t\t\t<span class=\"comment\">//获取&lt;ul&gt;里第二个&lt;li&gt;节点</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> li_text=<span class=\"variable\">$li</span>.<span class=\"keyword\">test</span>();\t\t\t\t<span class=\"comment\">//获取第二个&lt;li&gt;节点的文本内容</span></span><br><span class=\"line\">\talert(li_text);\t\t\t\t\t<span class=\"comment\">//打印内容</span></span><br></pre></td></tr></table></figure>\n<blockquote><p>2.查找属性节点<br>利用JQ选择器查找到需要的元素之后，就可以使用attr（）方法来获取它的各种属性的值了</p>\n</blockquote>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> $para =$(<span class=\"string\">\"p\"</span>);\t\t\t<span class=\"comment\">//获取&lt;P&gt;节点</span></span><br><span class=\"line\"><span class=\"built_in\">var</span> p_txt =$para.arrt(<span class=\"string\">\"title\"</span>);\t\t\t<span class=\"comment\">//获取&lt;P&gt;节点属性title</span></span><br><span class=\"line\">\talert(p_txt);\t\t\t\t\t<span class=\"comment\">//打印</span></span><br></pre></td></tr></table></figure>\n<blockquote><p>删除节点<br>remove()方法作用是删除DOM种所有匹配的元素，传入的参数用于根据JQuery表达式来筛选的元素</p>\n</blockquote>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"ul li:eq(1)\"</span>).<span class=\"built_in\">remove</span>();  //获取&lt;ul&gt;里第二个&lt;<span class=\"built_in\">li</span>&gt;节点后 把它从网页里面删除</span><br><span class=\"line\">\t<span class=\"built_in\">var</span> <span class=\"built_in\">li</span> =$(<span class=\"string\">\"ul li:eq(1)\"</span>).<span class=\"built_in\">remove</span>();</span><br><span class=\"line\">\t$<span class=\"built_in\">li</span>.appendTo(<span class=\"string\">\"ul\"</span>); \t\t//把刚刚删除的节点又重新添加到&lt;ul&gt;元素里面</span><br></pre></td></tr></table></figure>\n<blockquote><p>当某个节点用remov    e()方法删除后，该节点所包含的所有后代节点将同时被删除，<br>方法的返回值是一个指向已被删除的节点的引用，因此可以在以后再使用这些元素<br>示例代码如下</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> li =$(<span class=\"string\">\"ul li:eq(1)\"</span>).remove();</span><br><span class=\"line\">$li.appendTo(<span class=\"string\">\"ul\"</span>); \t\t<span class=\"comment\">//把刚刚删除的节点又重新添加到&lt;ul&gt;元素里面</span></span><br><span class=\"line\"><span class=\"comment\">//也可以简化成</span></span><br><span class=\"line\">\t$(<span class=\"string\">\"ul li:eq(1)\"</span>).appendTo(<span class=\"string\">\"ul\"</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//appendTo()方法也可以用来移动元素</span></span><br><span class=\"line\">\t<span class=\"comment\">//移动元素元素首先从文档上删除此元素，然后将该元素插入到得到的文档中的指定节点</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote><p>另外remove()方法也可以通过传递参数来选择性的删除元素，jquery代码如下</p>\n</blockquote>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"ul li\"</span>).<span class=\"built_in\">remove</span>(<span class=\"string\">\"li[title!=菠萝]\"</span>);\t\t//将&lt;<span class=\"built_in\">li</span>&gt;元素中属性<span class=\"built_in\">title</span>不等于菠萝的<span class=\"built_in\">li</span>&gt;元素删除</span><br></pre></td></tr></table></figure>\n<blockquote><p>2.empty()方法<br>严格来说empty()方法并不是删除节点 ，而是清空节点，它能清空元素中的所有后代节点<br>代码如下</p>\n</blockquote>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$(</span><span class=\"string\">\"ul li:eq(1)\"</span>).empty();\t\t\t\t<span class=\"regexp\">//</span>获取&lt;ul&gt;里第二个&lt;li&gt;节点后，清空此元素里的内容 元素属性还在</span><br></pre></td></tr></table></figure>\n<blockquote><p>复制节点<br>可以使用clone()方法 如果clone方法中传递了true作为参数的话 ，代表复制元素的同时复制元素中所绑定的事件</p>\n</blockquote>\n<blockquote><p>替换节点<br>replaceWith()和replaceAll()<br>replaceWith()的作用是将所要匹配的元素都替换成指定的HTML元素或者DOM元素<br>同样也可以用replaceAll()来实现，只是操作颠倒了而已<br>代码如下</p>\n</blockquote>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$(</span><span class=\"string\">\"p\"</span>).replaceWith(<span class=\"string\">\"&lt;strong&gt;你最不喜欢的水果是？&lt;/strong&gt;\"</span>);\t\t<span class=\"regexp\">//</span>用replaceWith()实现</span><br><span class=\"line\"><span class=\"variable\">$(</span><span class=\"string\">\"&lt;strong&gt;你最不喜欢的水果是？&lt;/strong&gt;\"</span>).replaceAll(<span class=\"string\">\"p\"</span>);\t\t<span class=\"regexp\">//</span>用replaceAll()实现</span><br></pre></td></tr></table></figure>\n<blockquote><p>包裹节点<br>可以用wrap()方法和wrapAll()方法 以及wrapInner()方法<br>区别是wrap()方法是把所匹配到的元素单独进行包裹也就是有几个就包裹几个<br>而wrapAll()方法是把所选到的元素全部一起包裹起来<br>wrapInner()方法则是把所选到的元素内容用其他结构化的元素标记给包裹起来<br>实现代码如下</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(\"strong\").wrap(\"<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span>\");\t\t//用<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>标签把<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>元素包裹起来</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(\"strong\").wrapAll(\"<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span>\");\t\t//用<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>标签把<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>元素包裹起来</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(\"strong\").wrapInner(\"<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span>\");\t\t//用<span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>标签把<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>元素的内容包裹起来</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","text":"为了能全面的理解JQ中的DOM操作，我们首先需要构建一个Html网页，因为每一张网页都能用DOM表示出来，而每一份DOM都可以看作一个DOM树，构建的网页如图<br>HTML代码如下1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<b","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/categories/JavaScript.json"},{"name":"JQuery","slug":"JavaScript/JQuery","count":3,"path":"api/categories/JavaScript/JQuery.json"}],"tags":[{"name":"笔记","slug":"笔记","count":5,"path":"api/tags/笔记.json"}]},{"title":"JQ选择器中含有空格的注意事项","slug":"6","date":"2018-11-07T05:48:19.222Z","updated":"2018-11-07T08:00:07.272Z","comments":true,"path":"api/articles/6.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote><p>选择器中的空格是不容忽视的，多一个空格也许会的到截然不同的结果<br>看下面的代码的例子，它的HTML代码如下</p>\n</blockquote>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"test\"</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">div</span> style=<span class=\"string\">\"display: none;\"</span>&gt;aa&lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">div</span> style=<span class=\"string\">\"display: none;\"</span>&gt;bb&lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">div</span> style=<span class=\"string\">\"display: none;\"</span>&gt;cc&lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"test\"</span> style=<span class=\"string\">\"display: none;\"</span>&gt;ee&lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\"> &lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> &lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"test\"</span> style=<span class=\"string\">\"display: none;\"</span>&gt;ff&lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\"> &lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"test\"</span> style=<span class=\"string\">\"display: none;\"</span>&gt;gg&lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote><p>使用如下JQuery选择器分别获取它们</p>\n</blockquote>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"variable\">$t_a</span>=$(<span class=\"string\">\".test :hidden\"</span>);\t<span class=\"comment\">//带空格的选择器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"variable\">$t_a</span>=$(<span class=\"string\">\".test:hidden\"</span>);\t\t<span class=\"comment\">//不带空格的选择器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> len_a=<span class=\"variable\">$t_a</span>.length;</span><br><span class=\"line\"><span class=\"keyword\">var</span> len_b=<span class=\"variable\">$t_b</span>.length;</span><br><span class=\"line\">alert(<span class=\"string\">\"$(\"</span>.<span class=\"keyword\">test</span> :hidden\") = len_a);\t<span class=\"comment\">//输出结果为4</span></span><br><span class=\"line\">alert(<span class=\"string\">\"$(\"</span>.<span class=\"keyword\">test</span>:hidden\") = len_b);\t<span class=\"comment\">//输出结果为3</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote><p>之所以会出现不同的结果 是因为选择后代器和过滤选择器不同</p>\n</blockquote>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"variable\">$t_a</span>=<span class=\"variable\">$(</span><span class=\"string\">\".test :hidden\"</span>);\t<span class=\"regexp\">//</span>带空格的选择器</span><br></pre></td></tr></table></figure>\n<blockquote><p>这个是过滤选择器 选取的是class里面为test的隐藏元素</p>\n</blockquote>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"variable\">$t_a</span>=<span class=\"variable\">$(</span><span class=\"string\">\".test:hidden\"</span>);\t\t<span class=\"regexp\">//</span>不带空格的选择器</span><br></pre></td></tr></table></figure>\n<blockquote><p>这个是选择后代器 选取的是 class为test并且也是隐藏元素的</p>\n</blockquote>","text":"选择器中的空格是不容忽视的，多一个空格也许会的到截然不同的结果<br>看下面的代码的例子，它的HTML代码如下1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>&lt;div class=\"test\"&gt;<br>\t&lt;d","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/categories/JavaScript.json"},{"name":"JQuery","slug":"JavaScript/JQuery","count":3,"path":"api/categories/JavaScript/JQuery.json"}],"tags":[{"name":"笔记","slug":"笔记","count":5,"path":"api/tags/笔记.json"},{"name":"JQuery","slug":"JQuery","count":2,"path":"api/tags/JQuery.json"}]},{"title":"JQurey对象和DOM对象实例操作（笔记）","slug":"5","date":"2018-11-07T05:39:20.547Z","updated":"2018-11-07T06:04:36.108Z","comments":true,"path":"api/articles/5.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote><p>JQuery 对象无法使用DOM对象的任何方法 例如$(“#id”).innerHTML和$(“#id”).checked 之类的写法都是错的<br>但是可以用$(“#id”).html()和$(“#id”).attr(“checked”)之类的JQuery方法来代替<br>JQuery 提供了两种方法将一个JQuery对象转化为DOM对象，即[index]和 get（index）;</p>\n</blockquote>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> var $<span class=\"literal\">cr</span> = $(<span class=\"string\">\"#cr\"</span>);\t<span class=\"comment\">\t//JQuery对象</span></span><br><span class=\"line\"> var  <span class=\"literal\">cr</span> =$<span class=\"literal\">cr</span>[<span class=\"number\">0</span>];\t\t<span class=\"comment\">\t//DOM对象</span></span><br><span class=\"line\">alert(<span class=\"literal\">cr</span>.checked);\t\t<span class=\"comment\">\t//检测这个CheckBox是否被选中</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"> var $<span class=\"literal\">cr</span> = $(<span class=\"string\">\"#cr\"</span>);\t<span class=\"comment\">\t//JQuery对象</span></span><br><span class=\"line\"> var  <span class=\"literal\">cr</span> =<span class=\"literal\">cr</span>.<span class=\"built_in\">get</span>(<span class=\"number\">0</span>);\t\t<span class=\"comment\">\t//DOM对象</span></span><br><span class=\"line\">alert(<span class=\"literal\">cr</span>.checked);\t\t<span class=\"comment\">\t//检测这个CheckBox是否被选中</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote><p>对于一个DOM对象， 只需要用$()把DOM对象给包装起来，就可以获得一个JQuery对象了<br>方式为$(DOM对象) 代码如下</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> cr=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"cr\"</span>);\t\t\t<span class=\"comment\">//DOM对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> $cr=$(cr);\t\t\t\t\t\t\t\t\t<span class=\"comment\">//JQuery对象</span></span><br></pre></td></tr></table></figure>","text":"JQuery 对象无法使用DOM对象的任何方法 例如$(“#id”).innerHTML和$(“#id”).checked 之类的写法都是错的<br>但是可以用$(“#id”).html()和$(“#id”).attr(“checked”)之类的JQuery方法来代替<br>JQ","link":"","raw":null,"photos":[],"categories":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/categories/JavaScript.json"},{"name":"JQuery","slug":"JavaScript/JQuery","count":3,"path":"api/categories/JavaScript/JQuery.json"}],"tags":[{"name":"笔记","slug":"笔记","count":5,"path":"api/tags/笔记.json"},{"name":"JQuery","slug":"JQuery","count":2,"path":"api/tags/JQuery.json"}]}]}