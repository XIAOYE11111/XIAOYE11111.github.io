{"total":4,"pageSize":10,"pageCount":1,"data":[{"title":"makedown 添加图片的几种方法（笔记）","slug":"4","date":"2018-11-06T11:58:14.495Z","updated":"2018-11-06T12:05:35.150Z","comments":true,"path":"api/articles/4.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote><p>准备工作<br>将hexo目录下的_config.yml全局配置文件下的post_asset_folder配置属性改成true<br>然后再用git hexo n 一个新文档 你会发现在source/_post/目录下会生成一个相同名字的文件夹<br>然后将你要的图片给放到那个文件夹下即可<br>我这里是生产了3 于是我放到了3下面<br>然后下面是三种方法</p>\n</blockquote>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">1.![<span class=\"string\">test</span>](<span class=\"link\">3/3.jpg </span>)</span><br><span class=\"line\"></span><br><span class=\"line\">2.<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/3/3.jpg\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"10,10\"</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">3. </span><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/3/3.jpg\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"20%\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"20%\"</span>&gt;</span></span></span><br></pre></td></tr></table></figure>","text":"准备工作<br>将hexo目录下的_config.yml全局配置文件下的post_asset_folder配置属性改成true<br>然后再用git hexo n 一个新文档 你会发现在source/_post/目录下会生成一个相同名字的文件夹<br>然后将你要的图片给放到那个文","link":"","raw":null,"photos":[],"categories":[{"name":"makedown","slug":"makedown","count":1,"path":"api/categories/makedown.json"}],"tags":[{"name":"makedown","slug":"makedown","count":1,"path":"api/tags/makedown.json"},{"name":"笔记","slug":"笔记","count":1,"path":"api/tags/笔记.json"}]},{"title":"Node.js 实现Web 解析 DNS","slug":"2","date":"2018-11-06T08:48:53.763Z","updated":"2018-11-06T11:30:35.279Z","comments":true,"path":"api/articles/2.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote><p>创建Web服务器需要HTTP模块<br>DNS解析需要 Node.js的DNS模块<br>读取一个HTML页面 需要Node.js的 fileSystem模块<br>处理请求参数需要 Node.js的 querystring模块<br>创建parse_dns_ex.js文件</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var http</span>=require(<span class=\"string\">'http'</span>);</span><br><span class=\"line\"><span class=\"attribute\">   dns</span> =require(<span class=\"string\">'dns'</span>);</span><br><span class=\"line\"><span class=\"attribute\">   fs</span>  =require(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"attribute\">   url</span> =require(<span class=\"string\">'url'</span>);</span><br><span class=\"line\"><span class=\"attribute\">   querystring</span> = require(<span class=\"string\">\"querystring\"</span>);</span><br></pre></td></tr></table></figure>\n<blockquote><p>通过http.createServer方法来建立Http服务器</p>\n</blockquote>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123; <span class=\"comment\">//写http head 返回 html， 因此 Content-Type为html</span></span><br><span class=\"line\">\tres.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">'Content-Type'</span>:<span class=\"string\">'text/html'</span>&#125;);</span><br><span class=\"line\">\t<span class=\"comment\">/*获取当前index.html的路径*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> readpath =__dirname+<span class=\"string\">'/'</span>+<span class=\"built_in\">url</span>.parse(req.url).pathname;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> indexPage =fs.readFileSync(readpath);</span><br><span class=\"line\">\tres.end(indexPage); <span class=\"comment\">//返回</span></span><br><span class=\"line\">&#125;) .listen(<span class=\"number\">3000</span>,<span class=\"string\">\"127.0.0.1\"</span>);</span><br></pre></td></tr></table></figure>\n<blockquote><p>接下来在当前目录下 创建个index.html文件 内容如下</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>DNS查询<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">meta</span>  <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"content-type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align: center;\"</span>&gt;</span>DNS查询工具<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align: center;\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/parse\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\">\t\t查询DNS:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"search_dns\"</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"查询\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote><p>运行 parse_dns_ex.js文件,然后打开浏览器 输入<a href=\"http://127.0.0.1:3000\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:3000</a><br>服务器会返回index页面到客户端</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">node</span> <span class=\"title\">parse_dns_ex</span>.js</span><br></pre></td></tr></table></figure>\n<blockquote><p>以上代码 我们只实现的是一个DNS表单提交页面，对于DNS解析部分没有做出任何处理<br>我们要利用Node.js内置模块API来解析DNS域名</p>\n</blockquote>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tres.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">'Content-Type'</span>:<span class=\"string\">'text/html'</span>&#125;);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> pathname =<span class=\"built_in\">url</span>.parse(req.url).pathname; <span class=\"comment\">//获取当前请求资源的url路径 例如\"/parse\"</span></span><br><span class=\"line\">\treq.setEncoding(<span class=\"string\">\"utf8\"</span>);<span class=\"comment\">//设置返回客户端页面的数据格式 防止乱码</span></span><br><span class=\"line\">\trouter(res,req,pathname);<span class=\"comment\">//调用router方法来处理url路由</span></span><br><span class=\"line\">&#125;) .listen(<span class=\"number\">3000</span>,<span class=\"string\">\"127.0.0.1\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//打印log来测试</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"111111\"</span>);</span><br></pre></td></tr></table></figure>\n<blockquote><p>在原来的http.server方法中再添加一个路由方法router(res,req,pathname); 来判断客户端的不同资源请求<br>PS：方法的两个参数 其实是response(响应)和resquest（请求）<br>顾名思义req为http的客户端请求对象 用来请求比如url和一些参数<br>res为http的响应客户端请求对象 用来响应数据到客户端</p>\n</blockquote>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">router</span><span class=\"params\">(res,req,pathname)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span>(pathname)<span class=\"comment\">//根据pathname不同，执行不同的处理逻辑</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"/parse\"</span>:</span><br><span class=\"line\">\t\tparseDns(res,req)<span class=\"comment\">//域名解析</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:<span class=\"comment\">//其他情况显示index.html主页</span></span><br><span class=\"line\">\t\tgoIndex(res,req);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>上面的路由代码涉及到goIndex方法，其功能是显示一个index.html页面<br>所以只需要一个res对象 不需要req对象</p>\n</blockquote>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">goIndex</span>(<span class=\"params\">res,req</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> readPath = __dirname + <span class=\"string\">'/'</span>+ <span class=\"built_in\">url</span>.parse(<span class=\"string\">'index.html'</span>).pathname;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> indexPage = fs.readFileSync(readPath);<span class=\"comment\">//读取html数据，存放在indexpage变量之中</span></span><br><span class=\"line\">     res.end(indexPage);    　　　　　　　　　　　　<span class=\"comment\">//响应html数据到客户端</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>parseDns()函数也是类似的逻辑 主要应用是解析客户端传递进来的域名并且返回并显示该域名相对应的ip地址<br>在客户端使用的是一个POST方法<br>这里涉及个简单的问题Node.js如何从HTTP中获取POST参数？ 在Node.js中 res 对象有一个addListener方法，该方法就可以获取客户端传递来的POST数据<br>该接口是个异步方法，携带两个事件分别是data和end，data事件是指当有数据传递到服务器时触发的事件<br>end则是所以数据全部传递完毕后触发的事件，因此服务器在判断所有数据全部接受完了之后，执行回调函数来获得POST的参数，得到了POST参数后才执行相应的逻辑getDns也就是当end事件触发req.addlistener（“end”），才执行解析DNS函数 并返回结果</p>\n</blockquote>\n<figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseDns</span><span class=\"params\">(res,req)</span></span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\"> \tvar postData =<span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> \treq.addListener(<span class=\"string\">\"data\"</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(postDataChunk)</span></span></span><br><span class=\"line\"> \t&#123;</span><br><span class=\"line\"> \t\tpostData+= postDataChunk;</span><br><span class=\"line\"> \t&#125;);</span><br><span class=\"line\"> \treq.addListener(<span class=\"string\">\"end\"</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>//数据传递到服务器时触发的函数</span></span><br><span class=\"line\"> \t&#123;</span><br><span class=\"line\"> \t\tvar retData =getDns(postData,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(domain,addresses)</span></span></span><br><span class=\"line\"> \t\t&#123;</span><br><span class=\"line\"> \t\t\tres.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">'content-Type'</span>:<span class=\"string\">'text/html'</span>&#125;);</span><br><span class=\"line\"> \t\t\tconsole.<span class=\"built_in\">log</span>(retData);</span><br><span class=\"line\"> \t\t\tres.<span class=\"keyword\">end</span>(<span class=\"string\">\"&lt;html&gt;&lt;head&gt;&lt;meta http-equiv='</span>content-Type' content=<span class=\"string\">'text/html; charset =utf-8'</span>&gt;&lt;/head&gt;&lt;div style =<span class=\"string\">'text-align:center'</span>&gt;Domain:&lt;span style=<span class=\"string\">'color:red'</span>&gt;<span class=\"string\">\"+domain+\"</span>&lt;/span&gt; IP:&lt;span style=<span class=\"string\">'color:red'</span>&gt;<span class=\"string\">\"+addresses.join('</span>,<span class=\"string\">')+\"</span>&lt;/span&gt;&lt;/div&gt;&lt;/html&gt;<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\"> \t\t&#125;);</span></span><br><span class=\"line\"><span class=\"string\"> \t\treturn;</span></span><br><span class=\"line\"><span class=\"string\"> \t&#125;);</span></span><br></pre></td></tr></table></figure>\n<blockquote><p>getDns()方法，该方法是一个异步回调函数，通过异步执行DNS解析，然后回调执行数据返回到客户端</p>\n</blockquote>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDns</span><span class=\"params\">(postData,callback)</span></span>&#123;</span><br><span class=\"line\"> \t\t<span class=\"keyword\">var</span> domain =querystring.parse(postData).search_dns;<span class=\"comment\">//用querystring模块来获取postData中数据键值为search_dns的值</span></span><br><span class=\"line\"> \t\t<span class=\"comment\">//通过resolve API异步解析域名</span></span><br><span class=\"line\"> \t\tdns.resolve(domain,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(err,addresses)</span></span>&#123;</span><br><span class=\"line\"> \t\t\t<span class=\"keyword\">if</span>(!addresses)&#123;</span><br><span class=\"line\"> \t\t\t\taddresses=[<span class=\"string\">'no exist'</span>];</span><br><span class=\"line\"> \t\t\t&#125;</span><br><span class=\"line\"> \t\t\tcallback(domain,addresses);</span><br><span class=\"line\"> \t\t&#125;);</span><br><span class=\"line\"> \t&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>完整代码如下<br>在命令行中运行node parse_dns.js既可看到结果</p>\n</blockquote>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//parse_dns.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> http=<span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\">    dns =<span class=\"built_in\">require</span>(<span class=\"string\">'dns'</span>);</span><br><span class=\"line\">    fs  =<span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">url</span> =<span class=\"built_in\">require</span>(<span class=\"string\">'url'</span>);</span><br><span class=\"line\">    querystring = <span class=\"built_in\">require</span>(<span class=\"string\">\"querystring\"</span>);</span><br><span class=\"line\">http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tres.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">'Content-Type'</span>:<span class=\"string\">'text/html'</span>&#125;);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> pathname =<span class=\"built_in\">url</span>.parse(req.url).pathname;</span><br><span class=\"line\">\treq.setEncoding(<span class=\"string\">\"utf8\"</span>);</span><br><span class=\"line\">\trouter(res,req,pathname);</span><br><span class=\"line\">&#125;) .listen(<span class=\"number\">3000</span>,<span class=\"string\">\"127.0.0.1\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"111111\"</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">router</span>(<span class=\"params\">res,req,pathname</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span>(pathname)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">\"/parse\"</span>:</span><br><span class=\"line\">\t\tparseDns(res,req)</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">default</span>:</span><br><span class=\"line\">\t\tgoIndex(res,req);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">goIndex</span>(<span class=\"params\">res,req</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> readPath = __dirname + <span class=\"string\">'/'</span>+ <span class=\"built_in\">url</span>.parse(<span class=\"string\">'index.html'</span>).pathname;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> indexPage = fs.readFileSync(readPath);<span class=\"comment\">//读取html数据，存放在indexpage变量之中</span></span><br><span class=\"line\">     res.end(indexPage);    　　　　　　　　　　　　<span class=\"comment\">//响应html数据到客户端</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseDns</span>(<span class=\"params\">res,req</span>)</span></span><br><span class=\"line\"><span class=\"function\"> </span>&#123;</span><br><span class=\"line\"> \t<span class=\"keyword\">var</span> postData =<span class=\"string\">\"\"</span>;</span><br><span class=\"line\"> \treq.addListener(<span class=\"string\">\"data\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">postDataChunk</span>)</span></span><br><span class=\"line\"><span class=\"function\"> \t</span>&#123;</span><br><span class=\"line\"> \t\tpostData+= postDataChunk;</span><br><span class=\"line\"> \t&#125;);</span><br><span class=\"line\"> \treq.addListener(<span class=\"string\">\"end\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"> \t</span>&#123;</span><br><span class=\"line\"> \t\t<span class=\"keyword\">var</span> retData =getDns(postData,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">domain,addresses</span>)</span></span><br><span class=\"line\"><span class=\"function\"> \t\t</span>&#123;</span><br><span class=\"line\"> \t\t\tres.writeHead(<span class=\"number\">200</span>,&#123;<span class=\"string\">'content-Type'</span>:<span class=\"string\">'text/html'</span>&#125;);</span><br><span class=\"line\"> \t\t\t<span class=\"built_in\">console</span>.log(retData);</span><br><span class=\"line\"> \t\t\tres.end(<span class=\"string\">\"&lt;html&gt;&lt;head&gt;&lt;meta http-equiv='content-Type' content='text/html; charset =utf-8'&gt;&lt;/head&gt;&lt;div style ='text-align:center'&gt;Domain:&lt;span style='color:red'&gt;\"</span>+domain+<span class=\"string\">\"&lt;/span&gt; IP:&lt;span style='color:red'&gt;\"</span>+addresses.join(<span class=\"string\">','</span>)+<span class=\"string\">\"&lt;/span&gt;&lt;/div&gt;&lt;/html&gt;\"</span>);</span><br><span class=\"line\"> \t\t&#125;);</span><br><span class=\"line\"> \t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\"> \t&#125;);</span><br><span class=\"line\"> \t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDns</span>(<span class=\"params\">postData,callback</span>)</span>&#123;</span><br><span class=\"line\"> \t\t<span class=\"keyword\">var</span> domain =querystring.parse(postData).search_dns;</span><br><span class=\"line\"> \t\tdns.resolve(domain,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err,addresses</span>)</span>&#123;</span><br><span class=\"line\"> \t\t\t<span class=\"keyword\">if</span>(!addresses)&#123;</span><br><span class=\"line\"> \t\t\t\taddresses=[<span class=\"string\">'no exist'</span>];</span><br><span class=\"line\"> \t\t\t&#125;</span><br><span class=\"line\"> \t\t\tcallback(domain,addresses);</span><br><span class=\"line\"> \t\t&#125;);</span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>","text":"创建Web服务器需要HTTP模块<br>DNS解析需要 Node.js的DNS模块<br>读取一个HTML页面 需要Node.js的 fileSystem模块<br>处理请求参数需要 Node.js的 querystring模块<br>创建parse_dns_ex.js文件1<b","link":"","raw":null,"photos":[],"categories":[{"name":"Node.js","slug":"Node-js","count":2,"path":"api/categories/Node-js.json"}],"tags":[{"name":"node.js","slug":"node-js","count":1,"path":"api/tags/node-js.json"}]},{"title":"Node.js 静态资源管理","slug":"3","date":"2018-11-06T06:19:28.136Z","updated":"2018-11-06T11:33:44.040Z","comments":true,"path":"api/articles/3.json","excerpt":"","keywords":null,"cover":"/2018/11/06/3/3.jpg","content":"<p><img src=\"/2018/11/06/3/3.jpg\" alt=\"test\"></p>\n<img src=\"/2018/11/06/3/3.jpg\" title=\"10,10\">\n<p><img src=\"/2018/11/06/3/3.jpg\" width=\"20%\" height=\"20%\"></p>\n","text":" [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"Node.js","slug":"Node-js","count":2,"path":"api/categories/Node-js.json"}],"tags":[{"name":"node.js 静态资源管理","slug":"node-js-静态资源管理","count":1,"path":"api/tags/node-js-静态资源管理.json"}]},{"title":"github仓库删除文件步骤","slug":"1","date":"2018-11-04T12:17:33.869Z","updated":"2018-11-06T02:51:44.404Z","comments":true,"path":"api/articles/1.json","excerpt":"","keywords":null,"cover":"/2018/11/04/1/1.png","content":"<blockquote><p>github仓库删除文件的步骤<br>1.先把你要删除文件的仓库先下载到本地<br>在任意地方创建一个文件夹 作为你的本地工作仓库<br>    然后右键 Git bash here<br><img src=\"/2018/11/04/1/1.png\"><br>然后在命令行中输入以下代码</p>\n</blockquote>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github<span class=\"selector-class\">.com</span>:XIAOYE11111/XIAOYE11111<span class=\"selector-class\">.github</span><span class=\"selector-class\">.io</span> <span class=\"comment\">//git@github.com：后面接你自己仓库的url</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/11/04/1/2.png\"><br><img src=\"/2018/11/04/1/3.png\"></p>\n<blockquote><p>本地仓库就下载下来了<br>2.然后在本地把你要删除的东西给删除了<br>比如我要删除XIAOYE11111.github.io仓库的css文件夹</p>\n</blockquote>\n<p><img src=\"/2018/11/04/1/4.png\"><br><img src=\"/2018/11/04/1/5.png\"><br>然后再在命令行中输入</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">'del'</span> <span class=\"regexp\">//</span> <span class=\"string\">'删除'</span>  提交,添加操作说明</span><br><span class=\"line\">git push -u origin master <span class=\"regexp\">//</span>将本次更改更新到GitHub项目上去</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/11/04/1/6.png\"><br><img src=\"/2018/11/04/1/7.png\"><br><blockquote><p>然后打开你的github仓库页面<br>点击上面的commits</p>\n</blockquote></p>\n<p><img src=\"/2018/11/04/1/8.png\"><br><blockquote><p>就发现了我们的删除操作说明了 说明操作成功了</p>\n</blockquote><br><img src=\"/2018/11/04/1/9.png\"></p>\n","text":"github仓库删除文件的步骤<br>1.先把你要删除文件的仓库先下载到本地<br>在任意地方创建一个文件夹 作为你的本地工作仓库<br>    然后右键 Git bash here<br> [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"git","slug":"git","count":1,"path":"api/categories/git.json"},{"name":"github","slug":"git/github","count":1,"path":"api/categories/git/github.json"}],"tags":[{"name":"git","slug":"git","count":1,"path":"api/tags/git.json"},{"name":"github","slug":"github","count":1,"path":"api/tags/github.json"}]}]}